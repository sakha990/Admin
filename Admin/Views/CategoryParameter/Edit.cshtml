@model Admin.Models.CategoryParameter
@using Admin.Repository
@{
    ViewBag.Title = "Edit Catgory Parameter";
    Layout = "~/Views/Shared/Master.cshtml";
    string parameterName = ViewBag.PreviousItem;
    bool Success = (bool)ViewBag.Success;
}
<div class="row">
    <div class="col-md-3">
        @Html.Partial("~/Views/Shared/CategoryTree.cshtml", (List<Admin.Models.CategoryTree>)ViewBag.CategoryTree)
    </div>

    <div class="col-md-9">
        <form class="form-horizontal" action="/CategoryParameter/Edit" method="post">
            <fieldset>
                <legend>Parameter Details</legend>
                <div class="form-group">
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    @Html.GetMessage(Success,parameterName)
                </div>

                <div class="form-group">
                    <label for="inputParentCategory" class="col-lg-2 control-label">Parent Category Name</label>
                    <div class="col-lg-10">
                        <input type="text" class="form-control" value=@ViewBag.ParentCategoryName readonly = "readonly">
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputParentCategory" class="col-lg-2 control-label"> Category Name</label>
                    <div class="col-lg-10">
                        <input type="text" class="form-control" value=@ViewBag.CategoryName readonly = "readonly">
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                    <div class="col-lg-10">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @style = "display:inline",@readonly = "readonly" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Values, new { @class = "control-label col-md-2" })
                    <div class="col-lg-10">
                        @Html.TextAreaFor(model => model.Values, new { @class = "form-control", @style = "display:inline" })
                        @Html.ValidationMessage("ParameterValues", "*", new { @class = "text-danger" })
                        <span class="help-block">Comma separated values.</span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-10 col-lg-offset-2">
                        <button type="reset" class="btn btn-default">Cancel</button>
                        <button type="submit" class="btn btn-success">Update</button>
                        @Html.HiddenFor(modal => modal.ParameterId)
                        @Html.HiddenFor(modal => modal.CategoryId)
                    </div>
                </div>
            </fieldset>
        </form>
    </div>
</div>






